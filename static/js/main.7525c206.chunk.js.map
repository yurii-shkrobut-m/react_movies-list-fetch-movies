{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","query","setQuery","isError","setIsError","isLoading","setIsLoading","setMovie","_Fragment","onSubmit","e","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","target","disabled","onClick","film","every","el","push","App","_useState","useState","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7525c206.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\nconst NOPOSTER = 'https://via.placeholder.com/360x270.png?text=no%20preview';\nconst IMDBBASEURL = 'https://www.imdb.com/title/';\n\ninterface Props {\n  query: string;\n  setQuery: (value: string) => void;\n  isError: boolean;\n  setIsError: (value: boolean) => void;\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => void;\n  setMovie: (movie: Movie | null) => void\n  movie: Movie | null;\n  movies: Movie[];\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  query,\n  setQuery,\n  isError,\n  setIsError,\n  isLoading,\n  setIsLoading,\n  movie,\n  setMovie,\n  movies,\n}) => {\n  const handleFindMovie = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then((data: MovieData | ResponseError) => {\n        if ('Poster' in data) {\n          setIsError(false);\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster === 'N/A' ? NOPOSTER : data.Poster,\n            imdbUrl: IMDBBASEURL + data.imdbID,\n            imdbId: data.imdbID,\n          });\n        } else {\n          setIsError(true);\n          setMovie(null);\n        }\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const addToMovieList = (film: Movie) => {\n    if (movies.every(el => el.imdbId !== film.imdbId)) {\n      movies.push(film);\n      setMovie(null);\n      setQuery('');\n    }\n\n    setMovie(null);\n    setQuery('');\n  };\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setIsError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleFindMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              className={`input ${isError ? 'is-danger' : ''}`}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={query}\n              onChange={handleQueryChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button is-light ${isLoading ? 'is-loading' : ''}`}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addToMovieList(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=9a086ce0';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies] = useState<Movie[]>([]);\n  const [query, setQuery] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          setQuery={setQuery}\n          isError={isError}\n          setIsError={setIsError}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          setMovie={setMovie}\n          movie={movie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}